sandboxed: true
start: auto
version: 0.0

extern:
{
    //gasMQ9              = groveSensor.gasMQ9.gasMQ9
    //alcohol             = groveSensor.alcohol.alcohol
    //air                 = groveSensor.air.air
    //speechRecognizer    = groveSensor.speechRecognizer.recognizer
    //ledmatrix           = groveSensor.ledmatrix.ledmatrix
    //light               = groveSensor.light.light
    //RFIDReader          = groveSensor.RFIDReader.RFIDReader
    ultraSonic          = groveSensor.ultraSonic.ultraSonic

}


executables:
{
    groveSensor = (
        //components/sensors/gasMQ9
        //components/sensors/alcohol
        //components/sensors/air
        //components/sensors/speechRecognizer
        //components/sensors/RFIDReader
        //components/actuators/ledmatrix
        //components/sensors/light
        components/sensors/ultraSonic
    )
}

processes:
{
    run:
    {
        ( groveSensor )
    }

    envVars:
    {
        LE_LOG_LEVEL = DEBUG
        LD_LIBRARY_PATH = /legato/systems/current/apps/groveSensor/read-only/usr/lib
    }
}

bindings:
{
    groveSensor.periodicSensor.dhubIO -> dataHub.io
    //groveSensor.gasMQ9.le_adc -> modemService.le_adc
    //groveSensor.gasMQ9.dhubIO -> dataHub.io
    //groveSensor.alcohol.le_adc -> modemService.le_adc
    //groveSensor.alcohol.dhubIO -> dataHub.io
    //groveSensor.air.dhubIO -> dataHub.io
    //groveSensor.ledmatrix.io -> dataHub.io
    //groveSensor.ledmatrix.admin -> dataHub.admin
    //groveSensor.speechRecognizer.dhubIO -> dataHub.io
    //groveSensor.RFIDReader.dhubIO -> dataHub.io
    //groveSensor.light.dhubIO -> dataHub.io
    //groveSensor.light.le_adc -> modemService.le_adc
    groveSensor.ultraSonic.dhubIO -> dataHub.io
    groveSensor.ultraSonic.le_gpioPin8 -> gpioService.le_gpioPin8
}
requires:
{
    device:
    {
        // replace these devices based on your module
        [rw]    /dev/i2c-5  /dev/
    }
}
